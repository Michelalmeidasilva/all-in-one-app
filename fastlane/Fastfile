# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

fastlane_require "dotenv"
Dotenv.load ".env.secret"

# Uncomment the line if you want fastlane to automatically update itself
default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics

  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  lane :create_tag do
    get_version_code(track_name: "internal")

    tagName = "builds/release-#{Actions.lane_context[SharedValues::VERSION_NUMBER]}-build-#{Actions.lane_context[SharedValues::BUILD_NUMBER]}"

    add_git_tag(
        tag: tagName
    )

    push_git_tags();
  end


  lane :deploy_homolog do
    create_tag()
    internal();
  end


  lane :get_version_code do |values|
    desc "Bumps the release name and code version on the project"
    track_name = values[:track_name]

    Actions.lane_context[SharedValues::BUILD_NUMBER] = google_play_track_version_codes(
      track: track_name,
      package_name: ENV["PACKAGE_NAME"],
      json_key: ENV["GOOGLE_API_ACCESS_PATH_FILE"],
     )[0]

    Actions.lane_context[SharedValues::VERSION_NUMBER] = google_play_track_release_names(
      track: track_name,
      package_name: ENV["PACKAGE_NAME"],
      json_key: ENV["GOOGLE_API_ACCESS_PATH_FILE"],
    )[0]
  end

  lane :commit_version do
    build_number = Actions.lane_context[SharedValues::BUILD_NUMBER] + 1
    version_number = Actions.lane_context[SharedValues::VERSION_NUMBER]

    version = "#{version_number}-build-#{build_number}"
    branch_name = "release/android-#{version}"

    sh "cd .. && git checkout -b #{branch_name}"

    git_commit(path: '.', message: "New android app release #{version}", skip_git_hooks: true)
    push_to_git_remote(local_branch: branch_name, remote_branch: branch_name)
    create_pull_request(
     repo: "Michelalmeidasilva/galileu",
     title: "New Release ${version}",
     head: branch_name,       # optional, defaults to current branch name
     base: "develop", # optional, defaults to "master"
     body: "Please pull this in!",       # optional
    )
  end


  lane :internal do
#     apk_path = File.expand_path("..", Dir.pwd) + '/app/build/outputs/apk/release/app-release.apk'
#
#     gradle(
#       task: "bundle",
#       build_type: "Release"
#     )
#
#     upload_to_play_store(
#       track: 'internal',
#       skip_upload_aab: false,
#       skip_upload_apk: true
#     )
#
#
#     increment_version_code(
#       gradle_file_path: "./app/build.gradle",
#       version_code: Actions.lane_context[SharedValues::BUILD_NUMBER]
#     )

    get_version_code(track_name: "internal")

    commit_version()
  end
end
